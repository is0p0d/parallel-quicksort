main - calling para_quicksort...
para_quicksort - start: 0, end: 5
para_quicksort - array before algorithm: 
5 6 4 7 3 
rand_gen - max: 5, min: 1
para_quicksort - pivot: 3
swap - indA: 0, indB 3
swap - swapping vals: 5, 7
swap - swapped vals: 7, 5
partition - start: 0, end: 5
mark - start: 0. end: 5
mark - passed array: 7 6 4 5 3 
>i: 0, Arr index: 0
>i: 1, Arr index: 1
>i: 2, Arr index: 2
>i: 3, Arr index: 3
>i: 4, Arr index: 4
mark - returning this: 1 1 1 1 1 
filter - start: 0. end: 5
filter - passed array: 7 6 4 5 3 
filter - passed flags: 1 1 1 1 1 
prefix_sums - size: 5
prefix_sums - pow: 3, tempSize: 8
prefix_sums - call ps_arrprep...
ps_arrprep - passed array: 1 1 1 1 1 
ps_arrprep - new array: 1 1 1 1 1 0 0 0 
prefix_sums - upsweep 
prefix_sums - downsweep 
prefix_sums - array at algorithm finish:
0 1 2 3 4 5 5 5 
ps_addone: adding one to every element...
prefix_sums - passing this:
1 2 3 4 5 
filter - partSize: 5
filter - loop: 0, flags[0]: 1, flagsP[0]-1: 0, array[0]: 7
filter - loop: 1, flags[1]: 1, flagsP[1]-1: 1, array[1]: 6
filter - loop: 2, flags[2]: 1, flagsP[2]-1: 2, array[2]: 4
filter - loop: 3, flags[3]: 1, flagsP[3]-1: 3, array[3]: 5
filter - loop: 4, flags[4]: 1, flagsP[4]-1: 4, array[4]: 3
filter - returning this: 
7 6 4 5 3 
partition - sizeB: 5
flip - size: 5
fip - passed flags: 1 1 1 1 1 
fip - flipped flags: 0 0 0 0 0 
filter - start: 0. end: 5
filter - passed array: 7 6 4 5 3 
filter - passed flags: 0 0 0 0 0 
prefix_sums - size: 5
prefix_sums - pow: 3, tempSize: 8
prefix_sums - call ps_arrprep...
ps_arrprep - passed array: 0 0 0 0 0 
ps_arrprep - new array: 0 0 0 0 0 0 0 0 
prefix_sums - upsweep 
prefix_sums - downsweep 
prefix_sums - array at algorithm finish:
0 0 0 0 0 0 0 0 
ps_addone: adding one to every element...
prefix_sums - passing this:
1 1 1 1 1 
filter - partSize: 0
filter - returning this: 

partition - sizeC: 0
combine - sizeA: 5, sizeB: 5, sizeC: 0
combine - passed array A:7 6 4 5 3 
combine - passed array B:7 6 4 5 3 
combine - passed array C:
combine - completed array: 
7 6 4 5 3 
swap - indA: 0, indB 4
swap - swapping vals: 7, 3
swap - swapped vals: 3, 7
partition - array after partition:
3 6 4 5 7 


para_quicksort - section one
para_quicksort - start: 0, end: 5
para_quicksort - array before algorithm: 
3 6 4 5 7 
rand_gen - max: 5, min: 1
para_quicksort - pivot: 1
swap - indA: 0, indB 1
swap - swapping vals: 3, 6
swap - swapped vals: 6, 3
partition - start: 0, end: 5
mark - start: 0. end: 5
mark - passed array: 6 3 4 5 7 
>i: 0, Arr index: 0
>i: 1, Arr index: 1
>i: 2, Arr index: 2
>i: 3, Arr index: 3
>i: 4, Arr index: 4
mark - returning this: 1 1 1 1 0 
filter - start: 0. end: 5
filter - passed array: 6 3 4 5 7 
filter - passed flags: 1 1 1 1 0 
prefix_sums - size: 5
prefix_sums - pow: 3, tempSize: 8
prefix_sums - call ps_arrprep...
ps_arrprep - passed array: 1 1 1 1 0 
ps_arrprep - new array: 1 1 1 1 0 0 0 0 
prefix_sums - upsweep 
prefix_sums - downsweep 
prefix_sums - array at algorithm finish:
0 1 2 3 4 4 4 4 
ps_addone: adding one to every element...
prefix_sums - passing this:
1 2 3 4 5 
filter - partSize: 4
filter - loop: 0, flags[0]: 1, flagsP[0]-1: 0, array[0]: 6
filter - loop: 1, flags[1]: 1, flagsP[1]-1: 1, array[1]: 3
filter - loop: 2, flags[2]: 1, flagsP[2]-1: 2, array[2]: 4
filter - loop: 3, flags[3]: 1, flagsP[3]-1: 3, array[3]: 5
filter - returning this: 
6 3 4 5 
partition - sizeB: 4
flip - size: 5
fip - passed flags: 1 1 1 1 0 
fip - flipped flags: 0 0 0 0 1 
filter - start: 0. end: 5
filter - passed array: 6 3 4 5 7 
filter - passed flags: 0 0 0 0 1 
prefix_sums - size: 5
prefix_sums - pow: 3, tempSize: 8
prefix_sums - call ps_arrprep...
ps_arrprep - passed array: 0 0 0 0 1 
ps_arrprep - new array: 0 0 0 0 1 0 0 0 
prefix_sums - upsweep 
prefix_sums - downsweep 
prefix_sums - array at algorithm finish:
0 0 0 0 0 1 1 1 
ps_addone: adding one to every element...
prefix_sums - passing this:
1 1 1 1 1 
filter - partSize: 1
filter - loop: 4, flags[4]: 1, flagsP[4]-1: 0, array[4]: 7
filter - returning this: 
7 
partition - sizeC: 1
combine - sizeA: 5, sizeB: 4